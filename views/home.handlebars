<h1>Bus stops</h1>

{{#if error}}
    <div class="alert alert-danger">{{error}}</div>
{{else}}

    {{#if stops}}
        <div class="row">
            <div class="col-md-8">
                <h3>Bus Stops</h3>
                <ul class="list-group mb-4">
                {{#each stops}}
                    <li class="list-group-item">
                        <a href="#" class="bus-stop-link" data-stop-id="{{this.id}}" data-bs-toggle="modal" data-bs-target="#departuresModal">
                            {{#if this.name}}
                                {{this.name}}
                            {{else}}
                                Stop #{{this.id}}
                            {{/if}}
                        </a>
                    </li>
                {{/each}}
                </ul>
            </div>
            <div class="col-md-4">
                <h3>Add New Departure</h3>
                <div class="card">
                    <div class="card-body">
                        <form id="addDepartureForm">
                            <div class="mb-3">
                                <label for="stop_id" class="form-label">Bus Stop</label>
                                <select class="form-select" id="stop_id" name="stop_id" required>
                                    <option value="">Choose a bus stop...</option>
                                    {{#each stops}}
                                    <option value="{{this.id}}">{{this.name}}</option>
                                    {{/each}}
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="departure_time" class="form-label">Departure Time</label>
                                <input type="time" class="form-control" id="departure_time" name="departure_time" required>
                            </div>
                            <div class="mb-3">
                                <label for="route_number" class="form-label">Route Number</label>
                                <input type="text" class="form-control" id="route_number" name="route_number" placeholder="e.g., 1, 2A, 15" required>
                            </div>
                            <div class="mb-3">
                                <label for="destination" class="form-label">Destination</label>
                                <input type="text" class="form-control" id="destination" name="destination" placeholder="e.g., Kesklinn, MustamÃ¤e" required>
                            </div>
                            <div class="mb-3">
                                <label for="day_type" class="form-label">Day Type</label>
                                <select class="form-select" id="day_type" name="day_type" required>
                                    <option value="">Choose day type...</option>
                                    <option value="weekdays">Weekdays</option>
                                    <option value="weekends">Weekends</option>
                                </select>
                            </div>
                            <button type="submit" class="btn btn-success w-100">Add Departure</button>
                        </form>
                        <div id="addDepartureMessage" class="mt-3" style="display: none;"></div>
                    </div>
                </div>
            </div>
        </div>
    {{else}}
        <div class="alert alert-info">No bus stops found.</div>
    {{/if}}
{{/if}}

<!-- Departures Modal -->
<div class="modal fade" id="departuresModal" tabindex="-1" aria-labelledby="departuresModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="departuresModalLabel">Departures</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="loading" class="text-center">
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p>Loading departures...</p>
                </div>
                <div id="departures-content" style="display: none;">
                    <div id="departures-list"></div>
                </div>
                <div id="error-content" style="display: none;">
                    <div class="alert alert-danger">Failed to load departures. Please try again.</div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const modal = document.getElementById('departuresModal');
    const modalTitle = document.getElementById('departuresModalLabel');
    const loading = document.getElementById('loading');
    const departuresContent = document.getElementById('departures-content');
    const departuresList = document.getElementById('departures-list');
    const errorContent = document.getElementById('error-content');
    
    // Handle add departure form submission
    const addDepartureForm = document.getElementById('addDepartureForm');
    const addDepartureMessage = document.getElementById('addDepartureMessage');
    
    addDepartureForm.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const formData = new FormData(this);
        const data = Object.fromEntries(formData);
        
        // Show loading state
        const submitButton = this.querySelector('button[type="submit"]');
        const originalText = submitButton.textContent;
        submitButton.disabled = true;
        submitButton.textContent = 'Adding...';
        
        fetch('/add-departure', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(data)
        })
        .then(response => response.json())
        .then(result => {
            if (result.success) {
                addDepartureMessage.className = 'alert alert-success mt-3';
                addDepartureMessage.textContent = result.message;
                addDepartureMessage.style.display = 'block';
                addDepartureForm.reset();
            } else {
                addDepartureMessage.className = 'alert alert-danger mt-3';
                addDepartureMessage.textContent = result.error;
                addDepartureMessage.style.display = 'block';
            }
        })
        .catch(error => {
            console.error('Error:', error);
            addDepartureMessage.className = 'alert alert-danger mt-3';
            addDepartureMessage.textContent = 'Failed to add departure. Please try again.';
            addDepartureMessage.style.display = 'block';
        })
        .finally(() => {
            submitButton.disabled = false;
            submitButton.textContent = originalText;
            
            // Hide message after 5 seconds
            setTimeout(() => {
                addDepartureMessage.style.display = 'none';
            }, 5000);
        });
    });
    
    // Handle bus stop link clicks
    document.querySelectorAll('.bus-stop-link').forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            const stopId = this.getAttribute('data-stop-id');
            const stopName = this.textContent.trim();
            
            // Update modal title
            modalTitle.textContent = `Departures for ${stopName}`;
            
            // Reset modal state
            loading.style.display = 'block';
            departuresContent.style.display = 'none';
            errorContent.style.display = 'none';
            
            // Fetch departures
            fetch(`/api/departures/${stopId}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(departures => {
                    loading.style.display = 'none';
                    
                    if (departures.length === 0) {
                        departuresList.innerHTML = '<div class="alert alert-info">No departures found for this stop.</div>';
                    } else {
                        let html = '<div class="table-responsive"><table class="table table-striped"><thead><tr><th>Time</th><th>Route</th><th>Destination</th></tr></thead><tbody>';
                        
                        departures.forEach(departure => {
                            html += `<tr>
                                <td><span class="departure-time">${departure.departure_time}</span></td>
                                <td><span class="route-number">${departure.route_number}</span></td>
                                <td>${departure.destination}</td>
                            </tr>`;
                        });
                        
                        html += '</tbody></table></div>';
                        departuresList.innerHTML = html;
                    }
                    
                    departuresContent.style.display = 'block';
                })
                .catch(error => {
                    console.error('Error fetching departures:', error);
                    loading.style.display = 'none';
                    errorContent.style.display = 'block';
                });
        });
    });
});
</script>
